#!/bin/bash


if [ $# -gt 2 ]; then
	echo "Use it to update all the submodules of this repository and "
	echo "commit+push the changes (the commit will contain the today's date):"
	echo ""
	echo " -> usage: git-update-submodules [branch]"
        echo ""
        echo "If no branch is passed, the git checkout is skipped."
        echo "If branch does NOT exist, we try master."
	echo ""
#elif [ $# -eq 1 ]; then
#	branch=$1
#else
#	branch=devel
fi

echo "Pulling changes for the host repository"
git pull

if [ $# -eq 1 ]; then
    if [ $1 == 'devel' ]; then
        echo "Initializing some posible new submodules"
        git submodule update --init
        echo "...done"
    fi
fi

scipionPlugins=`ls -d scipion-em-*`
for plugin in $scipionPlugins
do
	echo ""
	cd $plugin
	echo " ---  Updating plugin: $plugin  ---"

	# skipping working branches
	git_status="$(git status 2> /dev/null)"
  	if [[ ! ( $git_status =~ "working directory clean" ||
  	          $git_status =~ "working tree clean" ) ]] ; then
    	echo "  > > >  working branch found, pulling skipped  < < < "
	else
            if [ $# -eq 1 ]; then
                branch=$1
		# trying to checkout certain branch
		git_status=$(git checkout $branch 2>&1)
		error_str="error: pathspec '$branch' did not match*"

		# if ceratin branch is not found we try master
		if [[ $git_status == $error_str ]]; then
			echo "$branch branch not found. Trying master..."
	    	git checkout master
	        else
	    	    echo $git_status
	        fi
                git pull origin $branch
            else
                git pull
            fi
	fi
	cd - >> /dev/null
done

if [ $# -eq 1 ]; then
    if [ $1 == 'devel' ]; then

        echo 
        echo 

        echo " ---  COMMITING IT TO THE SUBMODULES HOST  ---"
        cmName="Updating the submodules for $branch branch on $(date +"%d/%m/%Y")"
        echo
        echo "Commiting it with name '$cmName'"
        git commit -am "$cmName"

        echo
        echo "Pushing it..."
        git push
    fi
fi
